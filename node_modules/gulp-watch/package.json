{
  "name": "gulp-watch",
  "version": "1.0.7",
  "description": "Watch, that actually is an endless stream",
  "main": "index.js",
  "keywords": [
    "gulp",
    "watch",
    "gulpplugin"
  ],
  "scripts": {
    "test": "mocha -R spec -t 5000",
    "coverage": "istanbul cover node_modules/.bin/_mocha --report html -- -R spec",
    "coveralls": "istanbul cover _mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/floatdrop/gulp-watch.git"
  },
  "author": {
    "name": "Vsevolod Strukchinsky"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/floatdrop/gulp-watch/issues"
  },
  "devDependencies": {
    "coveralls": "^2.7.0",
    "istanbul": "^0.3.0",
    "mocha": "~1.21.4",
    "mocha-lcov-reporter": "^0.0.1",
    "proxyquire": "^1.0.1",
    "rimraf": "^2.2.8",
    "should": "~4.0.4",
    "sinon": "^1.9.1",
    "stream-assert": "^2.0.1",
    "strip-ansi": "^2.0.0",
    "touch": "0.0.3"
  },
  "dependencies": {
    "gaze": "0.5.x",
    "glob2base": "~0.0.11",
    "gulp-batch": "~1",
    "gulp-util": "~3.0.0",
    "path2glob": "0.0.2",
    "readable-stream": "^1.0.31",
    "vinyl": "^0.4.3",
    "vinyl-file": "~1.1.0"
  },
  "engine": "node >= 0.10",
  "readme": "# [gulp](https://github.com/gulpjs/gulp)-watch [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Coverage Status][coveralls-image]][coveralls-url] [![Dependency Status][depstat-image]][depstat-url]\n> Watch, that actually is an endless stream\n\n###  \n\nThis is an __reimplementation__ of bundled [`gulp.watch`](https://github.com/gulpjs/gulp/blob/master/docs/API.md#gulpwatchglob—opts-cb) with an endless-stream approach. If `gulp.watch` is working for you, stick with it; otherwise, you can try this `gulp-watch` plugin.\n\nThe main reason for `gulp-watch`'s existence is that it can easily achieve per-file rebuilding on file change:\n\n![Awesome demonstration](https://github.com/floatdrop/gulp-watch/raw/master/img/2014-01-09.gif)\n\n## Installation\n\nRun `npm install gulp-watch`.\n\n## Usage\n\n```js\nvar gulp = require('gulp'),\n    watch = require('gulp-watch');\n\ngulp.task('default', function () {\n    gulp.src('css/**/*.css')\n        .pipe(watch('css/**/*.css', function(files) {\n            return files.pipe(gulp.dest('./one/'));\n        }))\n        .pipe(gulp.dest('./two/'));\n    // `one` and `two` will contain same files\n});\n```\n\n> __Protip:__ until gulpjs 4.0 is released, you can use [gulp-plumber](https://github.com/floatdrop/gulp-plumber) to prevent stops on errors.\n\nMore examples can be found in [`docs/readme.md`](/docs/readme.md).\n\n## API\n\n### watch(glob, [options, callback])\n\nCreates watcher that will spy on files that were matched by `glob` which can be a\n[`node-glob`](https://github.com/isaacs/node-glob) string or array of strings.\n\nReturns pass through stream, that will emit vinyl files\n(with additional `event` property) that corresponds to event on file-system.\n\n#### Callback `function(events, done)`\n\nThis function is called, when some group of events (that grouped with\n[`gulp-batch`](https://github.com/floatdrop/gulp-batch)) is happens on file-system.\nAll incoming files that piped in will be grouped and passed to `events` stream as is.\n\n * `events` — is `Stream` of incoming events. Events will be grouped by timeout to prevent multiple tasks to be executed repeatedly by commands like `git pull`.\n * `done` — is callback for your function signal to batch once you are done. This allows you to run your callback as soon as the previous `end`.\n\n#### Options\n\nThis object is passed to [`gaze` options](https://github.com/shama/gaze#properties) directly (refer to [`gaze` documentation](https://github.com/shama/gaze)). For __batched__ mode, we are using [`gulp-batch`](https://github.com/floatdrop/gulp-batch#api), so options from there are also available. And of course options for [`gulp.src`](https://github.com/gulpjs/gulp#gulpsrcglobs-options) are used too. If you do not want content from `watch`, then add `read: false` to the `options` object.\n\n#### options.base\nType: `String`  \nDefault: `undefined`\n\nUse explicit base path for files from `glob`.\n\n#### options.name\nType: `String`  \nDefault: `undefined`\n\nName of the watcher. If it present in options, you will get more readable output:\n\n![Naming watchers](https://github.com/floatdrop/gulp-watch/raw/master/img/naming.png)\n\n#### options.verbose\nType: `Boolean`  \nDefault: `false`\n\nThis options will enable more verbose output (useful for debugging).\n\n### Methods\n\nReturned `Stream` from constructor have some useful methods:\n\n * `close()` — calling `gaze.close` and emitting `end`, after `gaze.close` is done.\n\n### Events\n\n * `end` — all files are stop being watched.\n * `ready` — just re-emitted event from `gaze`.\n * `error` — when something happened inside callback, you will get notified.\n\n### Migration to 1.0.0\n\n * __watch is not emmiting files at start__ - read «[Starting tasks on events](/docs/readme.md#starting-tasks-on-events)» and «[Incremental build](https://github.com/floatdrop/gulp-watch/tree/master/docs#incremental-build)» for workarounds.\n * __watch is now pass through stream__ - which means that streaming files into watch will not add them to gaze. It is very hard to maintain, because watch is not aware about `glob`, from which this files come from and can not re-create vinyl object properly without maintaining cache of the `base` properties of incoming files (yuck).\n * __array of tasks is not accepted as callback__ - this was not working anyway, but rationale behind it - requiring gulp and calling internal method start is bad. This feature will become more clear, when gulp 4.0.0 will be released with new task system. Read «[Starting tasks on events](/docs/readme.md#starting-tasks-on-events)» for right way to do it.\n\n# License\n\nMIT (c) 2014 Vsevolod Strukchinsky (floatdrop@gmail.com)\n\n[npm-url]: https://npmjs.org/package/gulp-watch\n[npm-image]: http://img.shields.io/npm/v/gulp-watch.svg?style=flat\n\n[travis-url]: https://travis-ci.org/floatdrop/gulp-watch\n[travis-image]: http://img.shields.io/travis/floatdrop/gulp-watch.svg?style=flat\n\n[coveralls-url]: https://coveralls.io/r/floatdrop/gulp-watch\n[coveralls-image]: http://img.shields.io/coveralls/floatdrop/gulp-watch.svg?style=flat\n\n[depstat-url]: https://david-dm.org/floatdrop/gulp-watch\n[depstat-image]: http://img.shields.io/david/floatdrop/gulp-watch.svg?style=flat\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/floatdrop/gulp-watch",
  "_id": "gulp-watch@1.0.7",
  "_shasum": "dccd3f0ce23b3aff3db1cc43c6e95cb2046b6064",
  "_from": "gulp-watch@",
  "_resolved": "https://registry.npmjs.org/gulp-watch/-/gulp-watch-1.0.7.tgz"
}
